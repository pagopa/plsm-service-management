# Questo workflow gestisce il deploy della 'sm-certification-fn'.
# Implementa una strategia di deploy ibrida:
# 1. Deploy Automatico su Staging: Si attiva al push su 'develop' se cambiano i file relativi alla function app.
#    - Usa l'ambiente 'app-prod-ci' per i segreti.
# 2. Deploy Manuale in Produzione: Pu√≤ essere avviato manualmente dall'interfaccia di GitHub Actions.
#    - Usa l'ambiente 'app-prod-cd' per i segreti.

name: Deploy Certificate Function

on:
  # Trigger 1: Deploy automatico su staging al push su develop
  push:
    branches:
      - develop
    paths:
      - "apps/sm-certification-fn/**"

  # Trigger 2: Deploy manuale in produzione
  workflow_dispatch:

jobs:
  deploy:
    # Seleziona l'ambiente GitHub corretto in base al trigger.
    # 'app-prod-cd' per i deploy manuali (produzione), 'app-prod-ci' per quelli automatici (staging).
    environment: ${{ github.event_name == 'workflow_dispatch' && 'app-prod-cd' || 'app-prod-ci' }}
    runs-on: self-hosted

    steps:
      - name: Checkout del codice
        uses: actions/checkout@v4

      - name: Login su Azure tramite OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: Setup Node.js (se necessario)
        uses: actions/setup-node@v3
        with:
          node-version: "22" # Usa la stessa versione della tua app

      - name: Build e Pacchettizzazione della Function App
        run: |
          # Vai nella cartella della tua function app
          cd apps/sm-certification-fn

          # Installa le dipendenze
          npm install

          # Esegui il build (se il tuo progetto lo richiede)
          npm run build --if-present

          # Crea il pacchetto .zip per il deploy
          zip -r deployment.zip .

      - name: Deploy su Azure Function App
        run: |
          # Definisci il nome dello slot di deploy: staging per 'develop', produzione per 'main' (manuale)
          SLOT_NAME="staging"
          if [[ "${{ github.ref_name }}" == "main" && "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            SLOT_NAME="production"
          fi

          echo "Deploying to slot: $SLOT_NAME"

          az functionapp deployment source config-zip \
            --resource-group "sm-p-itn-common-rg-01" \
            --name "sm-p-itn-plsm-cert-func-01" \
            --src "apps/sm-certification-fn/deployment.zip" \
            --slot "$SLOT_NAME"
