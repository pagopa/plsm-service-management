name: Test Private Runner

# Trigger per l'esecuzione:
on:
  workflow_dispatch:

# Permessi necessari per l'autenticazione OIDC con Azure
permissions:
  id-token: write
  contents: read

jobs:
  test-private-runner:
    runs-on: self-hosted
    environment: app-prod-ci

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          # Usa i segreti configurati nell'ambiente GitHub di ci
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: 1. Test - Esegui un comando Azure CLI base
        run: |
          echo "Login avvenuto con successo per l'utente:"
          az account show

      - name: 2. Test - Accesso HTTP Privato (Prova che la rete e il DNS funzionano)
        # Questo step continuerà anche se quello precedente fallisce
        if: always()
        run: |
          echo "Tentativo di contattare l'endpoint /health della Web App privata..."
          # NOTA: Sostituisci il nome se hai cambiato il default
          STATUS_CODE=$(curl -k -s -o /dev/null -w "%{http_code}" https://sm-p-itn-smcr-app-01.azurewebsites.net/api/health)
          echo "Codice di stato HTTP ricevuto: $STATUS_CODE"
          if [ "$STATUS_CODE" -ne 200 ]; then
            echo "Errore: la Web App non ha risposto come previsto!"
            exit 1
          fi
          echo "Successo! La Web App è raggiungibile privatamente."

      - name: 3. Test - Accesso al Key Vault (Prova permessi Data Plane)
        if: always()
        run: |
          echo "Tentativo di elencare i segreti nel Key Vault..."
          # NOTA: Sostituisci il nome se hai cambiato il default
          az keyvault secret list --vault-name sm-p-itn-common-kv-01 --output table
          echo "Se vedi la lista dei segreti, i permessi RBAC funzionano!"
